{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "logicAppName": {
            "defaultValue": "la-sima-bib-dev-main_sequenced",
            "type": "String",
            "metadata": {
                "description": "Name of the Logic App."
            }
        },
        "logicAppLocation": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "allowedValues": [
                "[resourceGroup().location]",
                "eastasia",
                "southeastasia",
                "centralus",
                "eastus",
                "eastus2",
                "westus",
                "northcentralus",
                "southcentralus",
                "northeurope",
                "westeurope",
                "japanwest",
                "japaneast",
                "brazilsouth",
                "australiaeast",
                "australiasoutheast",
                "westcentralus",
                "westus2"
            ],
            "metadata": {
                "description": "Location of the Logic App."
                }
            },
        "ActiveMQ_Routing-ResourceGroup": {
            "defaultValue":"[resourceGroup().name]",
            "type": "string"
        },
        "ActiveMQ_Routing-FunctionApp": {
            "defaultValue": "asfa-big-bib-dev-amq",
            "type": "String"
        },
        "ActiveMQ_Routing-FunctionName": {
            "type": "string",
            "defaultValue": "activemq-jms-queue-producer"
            },
         "HTTP_Routing-ResourceGroup": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]"
            },
        "HTTP_Routing-FunctionApp": {
            "type": "string",
            "defaultValue": "asfa-big-bib-dev-routinghttp"
            },
        "HTTP_Routing-FunctionName": {
            "type": "string",
            "defaultValue": "RunHTTPRoutingJob"
            },
        "Storage_Queue_Routing-ResourceGroup": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]"
            },
        "Storage_Queue_Routing-FunctionApp": {
            "type": "string",
            "defaultValue": "asfa-big-bib-dev-routingsq"
            },
        "Storage_Queue_Routing-FunctionName": {
            "type": "string",
            "defaultValue": "pushStorageQueue"
            },
        "Run_Receive_Job-ResourceGroup": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]"
            },
        "Run_Receive_Job-FunctionApp": {
            "type": "string",
            "defaultValue": "asfa-big-bib-dev-receive"
            },
        "Run_Receive_Job-FunctionName": {
            "type": "string",
            "defaultValue": "RunReceiveJob"
            },
        "Run_Mapping_Job-FunctionApp": {
            "type": "string",
            "defaultValue": "asfa-big-bib-dev-mapping"
            },
        "Run_Mapping_Job-Type": {
            "type": "string",
            "defaultValue": "queue",
            "allowedValues": [
                "queue",
                "critical",
                "reprocess"
            ],
            "metadata": {
                "description": "Location of the Logic App."
                }
            },
        "InputFrequency": {
            "type": "string",
            "defaultValue": "Minute"
            },
        "InputInterval": {
            "type": "int",
            "defaultValue": 3
            },
        "SB-Queuename": {
            "type": "string",
            "defaultValue": "sb-sima-bib-dev-sequencedqueue"
            },
        "azureeventgridpublish_name": {
            "type": "string",
            "defaultValue": "apicon-queueevent-egt-main-dev"
            },
        "servicebus_name": {
            "type": "string",
            "defaultValue": "servicebus"
        },
        "azureblob_name": {
            "type": "string",
            "defaultValue": "apicon-azureblob-sima-dev"
        }        
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('servicebus_name')]",
            "location": "[parameters('logicAppLocation')]",
            "properties": {
                "displayName": "sequencedQueueConnection",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/servicebus')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('logicAppName')]",
            "location": "[parameters('logicAppLocation')]",
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "$functionConnection": {
                            "defaultValue": "LgPhErT2N/OmPtYw8/Lzl79EaTaseo9jOOVKytaYwdRw7vQLauX9qA==",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "When_a_message_is_received_in_a_queue_(peek-lock)": {
                            "recurrence": {
                                "frequency": "[parameters('InputFrequency')]",
                                "interval": "[parameters('InputInterval')]"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "[concat('/@{encodeURIComponent(encodeURIComponent(''',parameters('SB-Queuename'),'''))}/messages/head/peek')]",
                                "queries": {
                                    "queueType": "Main",
                                    "sessionId": "Next Available"
                                }
                            },
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "runs": 1
                                }
                            }
                        }
                    },
                    "actions": {
                        "Complete_the_message_in_a_queue": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "delete",
                                "path": "[concat('/@{encodeURIComponent(encodeURIComponent(''',parameters('SB-Queuename'),'''))}/messages/complete')]",
                                "queries": {
                                    "lockToken": "@triggerBody()?['LockToken']",
                                    "queueType": "Main",
                                    "sessionId": "@triggerBody()?['SessionId']"
                                }
                            }
                        },
                        "Create_blob": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@base64ToBinary(triggerBody()?['ContentData'])",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "transactions/received/@{triggerBody()?['SessionId']}",
                                    "name": "@{workflow()['run']['name']}",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "For_each": {
                            "foreach": "@body('RunReceiveJob')",
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "For_each_follow": {
                                            "foreach": "@json(string(items('For_each')?['routing']['follows']))",
                                            "actions": {
                                                "Publish_Event": {
                                                    "runAfter": {},
                                                    "trackedProperties": {
                                                        "action": "Publish",
                                                        "attributes": "{}",
                                                        "event": "@{items('For_each_follow')}",
                                                        "message": "OK",
                                                        "payload": "transactions/results/@{items('For_each')?['event']}/@workflow()['run']['name']",
                                                        "transaction_id": "@workflow()['run']['name']"
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": [
                                                            {
                                                                "data": {
                                                                    "actionCount": "",
                                                                    "attributes": "@{outputs('Run_Mapping_Job')['headers']?['attributes']}",
                                                                    "event": "@{items('For_each_follow')}",
                                                                    "key": "transactions/results/@{items('For_each')?['event']}/",
                                                                    "reprocessCount": "",
                                                                    "transaction": ""
                                                                },
                                                                "eventType": "Receive",
                                                                "id": "",
                                                                "subject": "@{items('For_each_follow')}"
                                                            }
                                                        ],
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azureeventgridpublish']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/eventGrid/api/events"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Switch_on_route": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        },
                                        "Switch_on_route": {
                                            "runAfter": {},
                                            "cases": {
                                                "activemq": {
                                                    "case": "activemq",
                                                    "actions": {
                                                        "activemq-jms-queue-producer": {
                                                            "runAfter": {},
                                                            "trackedProperties": {
                                                                "action": "Routing ActiveMQ",
                                                                "attributes": "@{outputs('activemq-jms-queue-producer')?['headers']?['attributes']}",
                                                                "event": "@{items('For_each')?['event']}",
                                                                "message": "@{body('activemq-jms-queue-producer')}",
                                                                "payload": "transactions/results/@{items('For_each')?['event']}/@workflow()['run']['name']",
                                                                "transaction_id": "@workflow()['run']['name']"
                                                            },
                                                            "type": "Function",
                                                            "inputs": {
                                                                "function": {
                                                                    "id": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('ActiveMQ_Routing-ResourceGroup'),'/providers/Microsoft.Web/sites/',parameters('ActiveMQ_Routing-FunctionApp'),'/functions/',parameters('ActiveMQ_Routing-FunctionName'))]"
                                                                },
                                                                "headers": {
                                                                    "actionCount": "50",
                                                                    "attributes": "@{outputs('Run_Mapping_Job')?['headers']?['attributes']}",
                                                                    "event": "@{items('For_each')?['event']}",
                                                                    "reprocessCount": "0",
                                                                    "tid": "@{workflow()['run']['name']}"
                                                                },
                                                                "method": "POST",
                                                                "queries": {
                                                                    "event": "routing/@{items('For_each')?['event']}",
                                                                    "source": "transactions/transformed/@{items('For_each')?['event']}/@{workflow()['run']['name']}",
                                                                    "target": "transactions/results/@{items('For_each')?['event']}/@{workflow()['run']['name']}"
                                                                },
                                                                "retryPolicy": {
                                                                    "count": 3,
                                                                    "interval": "PT5S",
                                                                    "type": "fixed"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "http": {
                                                    "case": "http",
                                                    "actions": {
                                                        "RunHTTPRoutingJob": {
                                                            "runAfter": {},
                                                            "trackedProperties": {
                                                                "action": "Routing HTTP",
                                                                "attributes": "@{outputs('RunHTTPRoutingJob')?['headers']?['attributes']}",
                                                                "event": "@{items('For_each')?['event']}",
                                                                "message": "@{body('RunHTTPRoutingJob')}",
                                                                "payload": "transactions/results/@{items('For_each')?['event']}/@workflow()['run']['name']",
                                                                "transaction_id": "@workflow()['run']['name']"
                                                            },
                                                            "type": "Function",
                                                            "inputs": {
                                                                "function": {
                                                                    "id": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('HTTP_Routing-ResourceGroup'),'/providers/Microsoft.Web/sites/',parameters('HTTP_Routing-FunctionApp'),'/functions/',parameters('HTTP_Routing-FunctionName'))]"
                                                                },
                                                                "headers": {
                                                                    "actionCount": "50",
                                                                    "attributes": "@{outputs('Run_Mapping_Job')?['headers']?['attributes']}",
                                                                    "event": "@{items('For_each')?['event']}",
                                                                    "reprocessCount": "0",
                                                                    "tid": "@{workflow()['run']['name']}"
                                                                },
                                                                "method": "POST",
                                                                "queries": {
                                                                    "event": "routing/@{items('For_each')?['event']}",
                                                                    "source": "transactions/transformed/@{items('For_each')?['event']}/@{workflow()['run']['name']}",
                                                                    "target": "transactions/results/@{items('For_each')?['event']}/@{workflow()['run']['name']}"
                                                                },
                                                                "retryPolicy": {
                                                                    "count": 3,
                                                                    "interval": "PT5S",
                                                                    "type": "fixed"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "storagequeue": {
                                                    "case": "storagequeue",
                                                    "actions": {
                                                        "pushStorageQueue": {
                                                            "runAfter": {},
                                                            "trackedProperties": {
                                                                "action": "Routing Storage Queue",
                                                                "attributes": "@{outputs('pushStorageQueue')?['headers']?['attributes']}",
                                                                "event": "@{items('For_each')?['event']}",
                                                                "message": "@{body('pushStorageQueue')}",
                                                                "payload": "transactions/results/@{items('For_each')?['event']}/@workflow()['run']['name']",
                                                                "transaction_id": "@workflow()['run']['name']"
                                                            },
                                                            "type": "Function",
                                                            "inputs": {
                                                                "function": {
                                                                    "id": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('Storage_Queue_Routing-ResourceGroup'),'/providers/Microsoft.Web/sites/',parameters('Storage_Queue_Routing-FunctionApp'),'/functions/',parameters('Storage_Queue_Routing-FunctionName'))]"
                                                                },
                                                                "headers": {
                                                                    "actionCount": "50",
                                                                    "attributes": "@{outputs('Run_Mapping_Job')?['headers']?['attributes']}",
                                                                    "event": "@{items('For_each')?['event']}",
                                                                    "reprocessCount": "0",
                                                                    "tid": "@{workflow()['run']['name']}"
                                                                },
                                                                "method": "POST",
                                                                "queries": {
                                                                    "event": "routing/@{items('For_each')?['event']}",
                                                                    "source": "transactions/transformed/@{items('For_each')?['event']}/@{workflow()['run']['name']}",
                                                                    "target": "transactions/results/@{items('For_each')?['event']}/@{workflow()['run']['name']}"
                                                                },
                                                                "retryPolicy": {
                                                                    "count": 3,
                                                                    "interval": "PT5S",
                                                                    "type": "fixed"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "default": {
                                                "actions": {}
                                            },
                                            "expression": "@items('For_each')['routing']['route']",
                                            "type": "Switch"
                                        }
                                    },
                                    "runAfter": {
                                        "Run_Mapping_Job": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@outputs('Run_Mapping_Job')?['headers']?['statusoverride']",
                                                    "Succeeded"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Run_Mapping_Job": {
                                    "runAfter": {},
                                    "trackedProperties": {
                                        "action": "Mapping job",
                                        "attributes": "@{string(outputs('Run_Mapping_Job'))}",
                                        "event": "@{items('For_each')?['event']}",
                                        "message": "@{body('Run_Mapping_Job')}",
                                        "payload": "transactions/transformed/@{items('For_each')?['event']}/@{triggerBody()?['SessionId']}",
                                        "statusoverride": "@{outputs('Run_Mapping_Job')?['headers']?['statusoverride']}",
                                        "transaction_id": "@workflow()['run']['name']"
                                    },
                                    "limit": {
                                        "timeout": "PT30M"
                                    },
                                    "type": "HttpWebhook",
                                    "inputs": {
                                        "subscribe": {
                                            "body": {
                                                "actionCount": "30",
                                                "attributes": "@{items('For_each')?['attributes']}",
                                                "callback": "@{listCallbackUrl()}",
                                                "event": "@{items('For_each')?['event']}",
                                                "reprocessCount": "0",
                                                "source": "transactions/received/@{triggerBody()?['SessionId']}/@{workflow()['run']['name']}",
                                                "target": "transactions/transformed/@{items('For_each')?['event']}/@{workflow()['run']['name']}",
                                                "transaction": "@{workflow()['run']['name']}"
                                            },
                                            "method": "POST",
                                            "uri": "[concat('https://',parameters('Run_Mapping_Job-FunctionApp'),'.azurewebsites.net/api/RunMappingAsynchJob?code=',listKeys(resourceId('Microsoft.Web/sites/functions',parameters('Run_Mapping_Job-FunctionApp'),'RunMappingAsynchJob'),'2019-08-01').default,'&type=',parameters('Run_Mapping_Job-Type'))]"
                                        },
                                        "unsubscribe": {}
                                    }
                                }
                            },
                            "runAfter": {
                                "RunReceiveJob": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "RunReceiveJob": {
                            "runAfter": {
                                "Create_blob": [
                                    "Succeeded"
                                ]
                            },
                            "trackedProperties": {
                                "action": "Receive process",
                                "attributes": "@{json(triggerBody()['MessageText'])['data']?['attributes']}",
                                "event": "@{triggerBody()?['SessionId']}",
                                "message": "@{body('RunReceiveJob')}",
                                "payload": "transactions/received/@{triggerBody()?['SessionId']}",
                                "transaction_id": "@{workflow()['run']['name']}"
                            },
                            "type": "Function",
                            "inputs": {
                                "function": {
                                    "id": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('Run_Receive_Job-ResourceGroup'),'/providers/Microsoft.Web/sites/',parameters('Run_Receive_Job-FunctionApp'),'/functions/',parameters('Run_Receive_Job-FunctionName'))]"
                                },
                                "headers": {
                                    "actionCount": "0",
                                    "attributes": "{}",
                                    "reprocessCount": "0",
                                    "tid": "@{workflow()['run']['name']}"
                                },
                                "queries": {
                                    "event": "@{triggerBody()?['SessionId']}",
                                    "payload": "transactions/received/@{triggerBody()?['SessionId']}/@{body('Create_blob')?['DisplayName']}"
                                },
                                "retryPolicy": {
                                    "count": 3,
                                    "interval": "PT5S",
                                    "type": "fixed"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                    "connectionId": "[resourceId('Microsoft.Web/connections',parameters('azureblob_name'))]",
                                    "connectionName": "[parameters('azureblob_name')]",
                                    "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/azureblob')]"
                            },
                            "azureeventgridpublish": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azureeventgridpublish_name'))]",
                                "connectionName": "[parameters('azureeventgridpublish_name')]",
                                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/azureeventgridpublish')]"
                            },
                            "servicebus": {
                                "connectionId": "[resourceID('Microsoft.Web/connections',parameters('servicebus_name'))]",
                                "connectionName": "[parameters('servicebus_name')]",
                                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/servicebus')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}